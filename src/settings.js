

function loadScanStatus() {
	document.getElementById('status-label').innerHTML = 'No scan scheduled';
}

function toggleRecurrent() {
	document.getElementById('single').classList.toggle('hidden');
	document.getElementById('recurrent').classList.toggle('hidden');
}

function handleSchedule() {
	var type = getScheduleType();
	var newStatus;
	if( type == 'recurrent' ) 
		//newDate = handleScheduleRecurrent();
		newStatus = handleScheduleRecurrent();
	else
		//newDate = handleScheduleSingle();
		newStatus = handleScheduleSingle();

	console.log('setting new status');
	document.getElementById('status-label').innerHTML = newStatus;
}

function isValidDate(dateObj) {
	return ! isNaN(dateObj.getDate());
}

function isValidInterval(n) {
	return typeof n == 'number';
	return typeof n == 'number' && !isNaN(n) && isFinite(n) && n > 0;
}

function getScheduleType() {
	if( document.getElementById('recurrent').classList.contains('hidden') )
		return 'single';
	else
		return 'recurrent';
}

function formatDate(date) {
	return ("" + date).substring(0, 25);
}

function handleScheduleRecurrent() {
	var dateStart = getDateSingle();
	var interval = getRecurrentDays();

	if( ! isValidDate(dateStart) )
		return "Invalid start date";
	if( ! isValidInterval(interval) )
		return "Invalid interval";

	var dateString = formatDate(dateStart);

	return "Recurrent scan scheduled starting at " + dateString + ' and running every ' + interval + ' days.';
}

function handleScheduleSingle() {
	var date = getDateSingle();
	var dateString = formatDate(date);
	if( isValidDate(date) ) 
		return "Scan scheduled for " + dateString;
	else
		return "Invalid date";
}

function getRecurrentDays() {
	var interval = document.getElementById('recurrent-interval').value;
	console.log('got interval '+interval);
	return Number(interval);
}

function getDateSingle() {
	var date = picker.getDate();
	var hour = Number(document.getElementById('single-hour').value);
	if( hour == 12 ) 
		hour -= 12;
	if( document.getElementById('single-hour-type').value == 'pm' )
		hour += 12;
	date.setHours(hour);
	return date;
}


	
