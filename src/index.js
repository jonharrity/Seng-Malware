const {
  spawn
} = require("child_process");
const os = require("os");
var schedule = require('node-schedule');

var scan = null; // current running scan. null if no scan is currently running
var out = document.getElementById("scanoutput");
var type = "shallow"
let btn = document.getElementById('Scan')
const date = new Date();
var logName = "./LOGS/" + date.getFullYear() + "-" + (date.getMonth() + 1) + "-" + date.getDate() + "-" + date.getHours() + date.getMinutes() + "scanlog.txt";

function toggleSettings() {
	var a = document.getElementById('container');
	var b = document.getElementById('container-settings');
	a.classList.toggle('hidden');
	b.classList.toggle('hidden');
}

function DeepScanSelected() {
  type = "deep";

  let currCard = document.getElementById("DeepSelect");
  currCard.classList.add("selected")

  let oldCard = document.getElementById("ShallowSelect")
  oldCard.classList.remove("selected")

  console.log("deep scan has been selected")
}

function ShallowScanSelected() {
  type = "shallow";

  let currCard = document.getElementById("ShallowSelect");
  currCard.classList.add("selected")

  let oldCard = document.getElementById("DeepSelect")
  oldCard.classList.remove("selected")

  console.log("shallow scan has been selected")
}

function Scan(stype)
{
  // code to power the optional arg to make choosing scans easier in the background
  stype = stype || "";
  if (stype !== "shallow" || "deep" || "")
  {
    stype = "";
  }
  else if (stype === "shallow" || "deep")
  {
    type = stype;
  }

  if (scan == null) {

    console.log(`type: ${type}`);
    if (type === "deep") {
      scan = spawn("clamscan", ["-r", "C:", "--move=QUARANTINE", "--exclude=\QUARANTINE", `-l${logName}`]);
      out.innerHTML = "Deep scan starting...<br>(this might take a moment)<br>";
    } else if (type === "shallow") {
      scan = spawn("clamscan", ["-r", "--file-list=scanlist.txt", "--move=QUARANTINE", "--exclude=\QUARANTINE", `-l${logName}`]);
      out.innerHTML = "Shallow scan starting...<br>(this might take a moment)<br>";
    }
    else if (type == "") {
      btn.onclick = () => {
        alert('Please select a scan!')
      }
    }
  }

  console.log(scan);

  if (scan) {
    ShowTextarea();
  }

  scan.stdout.on("data", chunk => {
    let output = chunk.toString();
    if (output.includes("OK")) {
      out.innerHTML += `<span class="OK"> ${output}</span><br>`
    } else if (output.includes("FOUND")) {
      out.innerHTML += `<span class="FOUND"> ${output}</span><br>`
    } else {
      out.innerHTML += output;
    }

    out.scrollTop = out.scrollHeight;
  });

  scan.on("close", code => {
    out.value += `Done<br>`;

    console.log(`finished with code: ${code}`);
    scan = null;

    let open = document.getElementById("select-area").classList.contains("closed")
    if (open) {
      btn.innerHTML = "Close"
    } else {
      btn.innerHTML = "Scan"
    }
  })
}

function ShowTextarea() {
  let selectArea = document.getElementById('select-area');
  selectArea.classList.add('closed');

  let button = document.getElementById('Scan');
  button.innerHTML = "Cancel"
  button.onclick = End;

  let scanoutput = document.getElementById('scanoutput');
  scanoutput.classList.remove('hidden');
}

function End() {
  console.log(scan);
  let open = document.getElementById('select-area').classList.contains("closed")

  if (scan != null) {
    scan.kill()
    console.log("scan has stopped");
    out.innerHTML = "Scan has stopped";
    scan = null

  }
  if (open) {

    let area = document.getElementById("select-area")
    area.classList.remove("closed")

    let button = document.getElementById('Scan');
    button.innerHTML = "Scan";
    button.onclick = Scan;

    let scanoutput = document.getElementById('scanoutput');
    scanoutput.classList.add('hidden');

  }
}

function loading() {
  const updateClam = spawn('freshclam')

  btn.innerHTML = "Updating..."
  btn.onclick = () => {
    alert('Updating malware signatures')
  }

  updateClam.stdout.on('data', chunk => {
    console.log(`clamAV is updating\n ${chunk.toString()}\n`)

  })

  updateClam.on('close', chunk => {
    console.log('clamAV has been updated')
    btn.onclick = Scan
    btn.innerHTML = "Scan"
  })
}


//Schedules a scan
function scheduleScan(date, interval) {
  var scheduleDate = new Date(date);
  console.log(scheduleDate);
  var day = scheduleDate.getDate();
  var month = scheduleDate.getMonth();
  var hourChosen = scheduleDate.getHours();
  console.log(hourChosen + ": hour to scan");
  if(interval > 0){
  var scheduledScan = schedule.scheduleJob('0 2 day/interval month *', Scan("shallow"));
  }
  else{
    var scheduledScan = schedule.scheduleJob(scheduleDate, Scan("shallow"));
  }
  console.log(type + " Scan is scheduled for " + day + " " + month + " " + year);
}

//Test scheduler, will run every 5 minutes
function testScan(date, recurrence, recurrenceValue) {
  var scheduledScan = schedule.scheduleJob('5 * * * *', Scan("shallow"));
  console.log(type + " Scan is scheduled for " + date);
}
