const {
  spawn
} = require("child_process");
const os = require("os");
const path = require('path');
var schedule = require('node-schedule');
var fs = require('fs');

var scan = null; // current running scan. null if no scan is currently running
var out = document.getElementById("scanoutput");
var type = "shallow"

function DeepScanSelected() {
  type = "deep";

  let currCard = document.getElementById("DeepSelect");
  currCard.classList.add("selected")

  let oldCard = document.getElementById("ShallowSelect")
  oldCard.classList.remove("selected")

  console.log("deep scan has been selected")

}

function ShallowScanSelected() {
  type = "shallow";

  let currCard = document.getElementById("ShallowSelect");
  currCard.classList.add("selected")

  let oldCard = document.getElementById("DeepSelect")
  oldCard.classList.remove("selected")

  console.log("shallow scan has been selected")
}


function ExecDeepScan() {
  console.log(`clamscan ${os.homedir()}`);  //Users default directory
  console.log(`${path.normalize(__dirname)}`);    //Seng-Malware\src
  console.log(`Starting directory: ${process.cwd()}`);
  const date = new Date();
  console.log(date);
  var logName = "/LOGS/" + date.getFullYear() + "-" + (date.getMonth()+1)+ "-" + date.getDate() + "scanlog.txt";
  console.log(logName);

  var logFile = path.basename(logName);
  var dest = path.resolve('./LOGS', logFile);

  const deepscan = spawn("clamscan", ["-r", "C:", "--move=QUARANTINE", "--exclude=\QUARANTINE", `-l${logName}`]);

	var retobj = {proc: deepscan,
					log: logFile,
					dest: dest
				};
	return retobj;
}

function ExecShallowScan() {
  console.log(`clamscan ${os.homedir()}`);
  const date = new Date();
  console.log(date);
  var logName = "./LOGS/" + date.getFullYear() + "-" + (date.getMonth()+1)+ "-" + date.getDate() + "scanlog.txt";
  console.log(logName);

  var logFile = path.basename(logName);
  var dest = path.resolve(/LOGS/, logFile);

  const shallowscan = spawn("clamscan", ["-r", "--file-list=scanlist.txt", "--move=QUARANTINE", "--exclude=\Quarantine", `-l${logName}`]);

	var objreturn = {proc: shallowscan,
					log: logFile,
					dest: dest};

	return objreturn;
}

function Scan() {

	var objscan;

	if( typeof out == 'undefined' ) {
		console.log('out is undefined');
		out = document.getElementById('scanoutput');
	}

  if (scan == null) {

    console.log(`type: ${type}`);
    if (type === "deep") {
//      scan = spawn("clamscan", ["-r", "/"]);
		objscan = ExecDeepScan();
		scan = objscan['proc'];
		out.innerHTML = "Deep scan starting...<br>(this might take a moment)<br>";
    } else if (type === "shallow") {
		objscan = ExecShallowScan();
		scan = objscan['proc'];
      out.innerHTML = "Shallow scan starting...<br>(this might take a moment)<br>";
    }
    /*else if (type == "") {
         out.innerHTML = "You haven't started a scan!<br>";
       }

  } else {
    out.innerHTML += "A scan has already started<br>";*/
  }

  console.log(scan);

  if (scan) {
    ShowTextarea();
  }

  scan.stdout.on("data", chunk => {
    let output = chunk.toString();
    if (output.includes("OK")) {
      out.innerHTML += `<span class="OK"> ${output}</span><br>`
    } else if (output.includes("FOUND")) {
      out.innerHTML += `<span class="FOUND"> ${output}</span><br>`
    } else {
      out.innerHTML += output;
    }

    out.scrollTop = out.scrollHeight;
  });

  scan.on("close", code => {
    out.value += `Done<br>`;

	  //move logs to correct folder
	  var fs = require('fs');
 fs.rename(objscan['log'], objscan['dest'], function(err) {
    if(err) throw err;
    else console.log('Log Generated Successfully');
  });

    console.log(`finished with code: ${code}`);
    scan = null;
  })
}

function ShowTextarea() {
  let selectArea = document.getElementById('select-area');
  selectArea.classList.add('closed');

  let button = document.getElementById('Scan');
  button.innerHTML = "Cancel"
  button.onclick = End;

  let scanoutput = document.getElementById('scanoutput');
  scanoutput.classList.remove('hidden');
}

function End() {
  console.log(scan);

  if (scan != null) {
    scan.kill()
    console.log("scan has stopped");
    out.innerHTML = "Scan has stopped";
    scan = null

    let area = document.getElementById('select-area');
    area.classList.remove('closed')

    let button = document.getElementById('Scan');
    button.innerHTML = "Scan";
    button.onclick = Scan;

    let scanoutput = document.getElementById('scanoutput');
    scanoutput.classList.add('hidden');

  } else {
    console.log("no scan has started");
    out.innerHTML = "no scan has started"
  }

}

function loading() {
  const updateClam = spawn('freshclam')
  let btn = document.getElementById('Scan')
  btn.innerHTML = "Updating..."
  btn.onclick = () => {
    alert('Updating malware signatures')
  }

  updateClam.stdout.on('data', chuck => {
    console.log(`clamAV is updating\n ${chuck.toString()}\n`)
  })

  updateClam.on('close', chuck => {
    console.log('clamAV has been updated')
    btn.onclick = Scan
    btn.innerHTML = "Scan"
  })

}


//Schedules a scan
  function scheduleScan(day, month, scanType){
    var scheduledScan = cron.schedule('* * 2 day month *', scanType());
    console.log(scanType + " Scan is scheduled for " + day + " " + month + " " + year);
    }

//Test scheduler
function scheduleScan(date, recurrence, recurrenceValue){
  var scheduledScan = cron.schedule('0 5 * * * *', shallowScan());
  console.log(scanType + " Scan is scheduled for " + day + " " + month + " " + year);
  }
